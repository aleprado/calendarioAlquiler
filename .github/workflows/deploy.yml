name: Deploy

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write
  deployments: write

jobs:
  validate_web:
    name: Build & Test Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Upload web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist

  deploy_web:
    name: Deploy Firebase Hosting
    runs-on: ubuntu-latest
    needs: validate_web
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: dist

      - name: SA sanity check (no keys)
        shell: bash
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          set -euo pipefail
          echo "$FIREBASE_SERVICE_ACCOUNT" > sa.json
          node -e "JSON.parse(require('fs').readFileSync('sa.json','utf8'))"
          echo "client_email: $(jq -r .client_email sa.json)"
          echo "project_id:  $(jq -r .project_id sa.json)"

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks

  deploy_functions_cli:
    name: Deploy Cloud Functions (CLI)
    runs-on: ubuntu-latest
    needs: validate_web
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: functions/package-lock.json

      # Auth GCP con SA del repo
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Habilitar APIs necesarias (idempotente)
      - name: Enable required APIs
        run: |
          gcloud services enable \
            cloudfunctions.googleapis.com \
            run.googleapis.com \
            artifactregistry.googleapis.com \
            cloudbuild.googleapis.com \
            firestore.googleapis.com

      # Asegurar SA de runtime para la función (idempotente) + roles mínimos
      - name: Ensure runtime Service Account + roles
        env:
          RUNTIME_SA: airbnb-calendar-functions@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          set -euo pipefail
          # crea si no existe
          gcloud iam service-accounts describe "$RUNTIME_SA" --project "$PROJECT_ID" >/dev/null 2>&1 || \
          gcloud iam service-accounts create airbnb-calendar-functions \
            --display-name="Airbnb Calendar Functions" \
            --project "$PROJECT_ID"

          # permisos mínimos para acceder a Firestore y leer objetos si hicieras uso de GCS
          gcloud projects add-iam-policy-binding "$PROJECT_ID" \
            --member="serviceAccount:$RUNTIME_SA" \
            --role="roles/datastore.user" >/dev/null

          gcloud projects add-iam-policy-binding "$PROJECT_ID" \
            --member="serviceAccount:$RUNTIME_SA" \
            --role="roles/storage.objectViewer" >/dev/null

      - name: Install deps (functions)
        run: npm ci
        working-directory: functions

      # Despliegue Cloud Functions Gen2 (HTTP)
      - name: Deploy calendar-api (Gen2)
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          BASIC_USER: ${{ secrets.GCP_FUNCTION_BASIC_AUTH_USER }}
          BASIC_PASS: ${{ secrets.GCP_FUNCTION_BASIC_AUTH_PASSWORD }}
          DEFAULT_PROPERTY_ID: ${{ secrets.DEFAULT_PROPERTY_ID }}
        run: |
          gcloud functions deploy calendar-api \
            --gen2 \
            --region=us-central1 \
            --runtime=nodejs20 \
            --source=functions \
            --entry-point=calendarApi \
            --trigger-http \
            --allow-unauthenticated \
            --service-account="airbnb-calendar-functions@${PROJECT_ID}.iam.gserviceaccount.com" \
            --set-env-vars="NODE_ENV=production,BASIC_AUTH_USER=${BASIC_USER},BASIC_AUTH_PASSWORD=${BASIC_PASS},DEFAULT_PROPERTY_ID=${DEFAULT_PROPERTY_ID},ALLOW_UNAUTHENTICATED=true"

      - name: Show function URL
        run: |
          gcloud functions describe calendar-api --gen2 --region=us-central1 \
            --format='value(serviceConfig.uri)'